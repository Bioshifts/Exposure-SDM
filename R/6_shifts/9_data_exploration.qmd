---
title: "Exploratory analyses"
author: "Bioshifts"
format: 
  html:
    toc: true
    number-sections: true
    code-fold: true
    code-summary: "Code"
editor: visual
---

```{r warning=FALSE, message=FALSE}
rm(list=ls())
gc()

library(dplyr)
library(tidyverse)
library(tidyr)
library(ggplot2)
library(knitr)
library(pbapply)
library(data.table)
library(tune)

```

# *Source code*

```{r source, warning=FALSE, message=FALSE}
try(source(here::here("R/settings.R")))
```

# *Load data*

```{r warning=FALSE, message=FALSE}

realm <- "Mar"

# Bioshifts data
sp_bioshifts <- read.csv(here::here("Output",paste(realm,"sps_bioshifts.csv")))
# SDM outputs data
sp_SDM_out <- read.csv(here::here("Output",paste(realm,"sp_SDM_out.csv")))
# range position
sp_range_pos <- read.csv(here::here("Output",paste(realm,"sp_range_pos.csv")))
sp_range_pos <- sp_range_pos[,-which(names(sp_range_pos) %in% c("START","END", "BG"))]
# Exposure
sp_exposure <- read.csv(here::here("Output",paste(realm,"sp_exposure.csv")))
sp_exposure_SA <- sp_exposure
# sp_exposure_SA <- sp_exposure[,-which(names(sp_exposure) == "exp_BG")]
# sp_exposure_BG <- sp_exposure[,-which(names(sp_exposure) == "exp_SA")]
# sp_exposure_BG <- sp_exposure_BG %>% spread(bio, exp_BG)
# names(sp_exposure_BG)[6:9] <- paste(names(sp_exposure_BG)[6:9],
                                    # "BG", sep = "_")
# sp_exposure_SA <- sp_exposure_SA %>% spread(bio, exp_SA)
# names(sp_exposure_SA)[6:9] <- paste(names(sp_exposure_SA)[6:9],
#                                     "SA", sep = "_")
# sp_exposure <- cbind(sp_exposure_BG, sp_exposure_SA[,6:9])
# sp_exposure <- sp_exposure[,-which(names(sp_exposure) %in% c("START","END"))]

# SDM shifts
sp_SDM_shift <- read.csv(here::here("Output",paste(realm,"sp_SDM_shift.csv")))
sp_SDM_shift <- sp_SDM_shift %>% filter(!quant %in% c("0%","100%","mean"))
sp_SDM_shift$time_period <- paste(round(sp_SDM_shift$START),
                                  round(sp_SDM_shift$END),
                                  sep = "-")

```

# *Merge SDM results with bioshifts*

```{r}
# add SDM output data
# sp_SDM_out_CV <- sp_SDM_out 
# SDM_shifts <- merge(sp_bioshifts, 
#                     sp_SDM_out_CV, 
#                     by.x = "New_name",
#                     by.y = "Species")
SDM_shifts <- left_join(sp_bioshifts, 
                        sp_SDM_shift[,c(1,4,5,6,9,10)], 
                        by = join_by(New_name == Species,
                                     ID == ID, 
                                     Type == Type))

SDM_shifts$time_period <- paste(round(SDM_shifts$START), round(SDM_shifts$END),sep="-")

# # add range position
# SDM_shifts <- left_join(SDM_shifts, sp_range_pos, 
#                         by = join_by(New_name == Species,
#                                      ID == ID, 
#                                      time_period == time_period,
#                                      Type == type))
# 
# # add Exposure
# SDM_shifts <- left_join(SDM_shifts, sp_exposure, 
#                         by = join_by(New_name == Species,
#                                      ID == ID, 
#                                      time_period == Time_periods))

# add SDM shift
# tmp <- sp_SDM_shift %>% 
#     filter(quant %in% c("5%","25%","50%","75%","95%")) %>%
#     dplyr::select(c("quant","shift_SA","ID","Species", "Type", "time_period"))
# tmp$quant <- gsub("%","",tmp$quant)
# # tmp_BG <- tmp[,-3]
# # tmp_BG <- tmp_BG %>% spread(quant, value = shift_BG)
# # names(tmp_BG)[5:9] <- paste0("BG_", names(tmp_BG)[5:9])
# # tmp_SA <- tmp[,-2]
# # tmp_SA <- tmp_SA %>% spread(quant, value = shift_SA)
# # names(tmp_SA)[5:9] <- paste0("SA_", names(tmp_SA)[5:9])
# # tmp <- cbind(tmp_BG,tmp_SA[,5:9])
# 
# SDM_shifts <- left_join(SDM_shifts, tmp, 
#                         by = join_by(New_name == Species,
#                                      ID == ID, 
#                                      time_period == time_period,
#                                      Type == Type))

# From degrees latitude to km
SDM_shifts$shift_SA <-  (SDM_shifts$shift_SA*111)/SDM_shifts$DUR 

```

# *Explore relationships*

## *N shifts per parameter*

```{r}
tmp <- data.frame(table(sp_bioshifts$Param))

ggplot(tmp, aes(x = Var1, y = Freq))+
    geom_col()+
    theme_classic()+
    geom_text(aes(label = Freq), vjust = -0.5)+
    xlab("N shifts")

tmp <- data.frame(table(sp_bioshifts$Class))

ggplot(tmp, aes(x = Var1, y = Freq))+
    geom_col()+
    theme_classic()+
    geom_text(aes(label = Freq), vjust = -0.5)+
    xlab("N shifts")+
  coord_flip()
```

# *SDM validation*

```{r}

ggplot(sp_SDM_out, aes(x = Metric, y = Value))+
         geom_violin()+
         geom_jitter(alpha = .5)+
  facet_wrap(.~Model)
  
         

```

# *How related are observed and potential shifts?*

## *Shifts at the study area*

```{r fig.width=5, fig.height=5, warning=FALSE, message=FALSE, message=FALSE}

tmp_s_SA <-  SDM_shifts %>% 
    dplyr::select(SHIFT, Param, Param, New_name, Type, ID, time_period,
                  SA_5, SA_25, SA_50, SA_75, SA_95) 

tmp_s_SA <- tmp_s_SA %>% 
    gather(type, SDM_shift, -c(SHIFT,Param,Param,New_name,Type,ID,time_period))  
tmp_s_SA$type <- factor(tmp_s_SA$type, 
                        levels = c("SA_5", "SA_25", "SA_50", "SA_75", "SA_95"))

# Leading Edge
ggplot(SDM_shifts %>%
         filter(quant == "95%") %>%
         filter(Param == "LE"), 
       aes(x = shift_SA, y = SHIFT))+
    geom_point(alpha = .5)+
    xlab("Potential shift (km/yr) (95% quantile)")+
    ylab("Observed shift (km/yr) LE")+
    theme_classic() +
    geom_smooth(method = "lm")+
    geom_abline(intercept = 0, slope = 1, linetype = "dashed")+
    facet_wrap(.~type, nrow = 1)+
    tune::coord_obs_pred()+
  facet_wrap(.~model)

ggplot(SDM_shifts %>%
         filter(quant == "75%") %>%
         filter(Param == "LE"), 
       aes(x = shift_SA, y = SHIFT))+
    geom_point(alpha = .5)+
    xlab("Potential shift (km/yr) (75% quantile)")+
    ylab("Observed shift (km/yr) LE")+
    theme_classic() +
    geom_smooth(method = "lm")+
    geom_abline(intercept = 0, slope = 1, linetype = "dashed")+
    facet_wrap(.~type, nrow = 1)+
    tune::coord_obs_pred()+
  facet_wrap(.~model)

# optimum
ggplot(SDM_shifts %>%
         filter(quant == "50%") %>%
         filter(Param == "O"), 
       aes(x = shift_SA, y = SHIFT))+
    geom_point(alpha = .5)+
    xlab("Potential shift (km/yr) (50% quantile)")+
    ylab("Observed shift (km/yr) Optimum")+
    theme_classic() +
    geom_smooth(method = "lm")+
    geom_abline(intercept = 0, slope = 1, linetype = "dashed")+
    facet_wrap(.~type, nrow = 1)+
    tune::coord_obs_pred()+
  facet_wrap(.~model)

# Trailing Edge
ggplot(SDM_shifts %>%
         filter(quant == "5%") %>%
         filter(Param == "TE"), 
       aes(x = shift_SA, y = SHIFT))+
    geom_point(alpha = .5)+
    xlab("Potential shift (km/yr) (5% quantile)")+
    ylab("Observed shift (km/yr) TE")+
    theme_classic() +
    geom_smooth(method = "lm")+
    geom_abline(intercept = 0, slope = 1, linetype = "dashed")+
    facet_wrap(.~type, nrow = 1)+
    tune::coord_obs_pred()+
  facet_wrap(.~model)

ggplot(SDM_shifts %>%
         filter(quant == "25%") %>%
         filter(Param == "TE"), 
       aes(x = shift_SA, y = SHIFT))+
    geom_point(alpha = .5)+
    xlab("Potential shift (km/yr) (25% quantile)")+
    ylab("Observed shift (km/yr) TE")+
    theme_classic() +
    geom_smooth(method = "lm")+
    geom_abline(intercept = 0, slope = 1, linetype = "dashed")+
    facet_wrap(.~type, nrow = 1)+
    tune::coord_obs_pred()+
  facet_wrap(.~model)
```

### *Per parameter*

```{r fig.width=5, fig.height=3, warning=FALSE, message=FALSE}

# LE
ggplot(tmp_s_SA %>%
           filter(Param == "LE" & (type == "SA_75" | type == "SA_95"))
       , aes(SDM_shift, y = SHIFT))+
    geom_point(alpha = .5)+
    ylab("Observed shift (km/yr)")+
    xlab("Potential shift (km/yr)")+
    theme_classic() +
    geom_smooth(method = "lm")+
    geom_abline(intercept = 0, slope = 1, linetype = "dashed")+
    facet_wrap(Param~type, nrow = 1)


# O
ggplot(tmp_s_SA %>%
           filter(Param == "O" & type == "SA_50")
       , aes(SDM_shift, y = SHIFT))+
    geom_point(alpha = .5)+
    ylab("Observed shift (km/yr)")+
    xlab("Potential shift (km/yr)")+
    theme_classic() +
    geom_smooth(method = "lm")+
    geom_abline(intercept = 0, slope = 1, linetype = "dashed")+
    tune::coord_obs_pred()

# TE
ggplot(tmp_s_SA %>%
           filter(Param == "TE" & (type == "SA_5" | type == "SA_25"))
       , aes(SDM_shift, y = SHIFT))+
    geom_point(alpha = .5)+
    ylab("Observed shift (km/yr)")+
    xlab("Potential shift (km/yr)")+
    theme_classic() +
    geom_smooth(method = "lm")+
    geom_abline(intercept = 0, slope = 1, linetype = "dashed")+
    facet_wrap(Param~type, nrow = 1)+
    tune::coord_obs_pred()

```

## *Shifts at the background area*

```{r fig.width=8, fig.height=5, warning=FALSE, message=FALSE}
tmp_s_BG <-  SDM_shifts %>% 
    dplyr::select(SHIFT, Param, Param, New_name, Type, ID, time_period,
                  BG_5, BG_25, BG_50, BG_75, BG_95) 

tmp_s_BG <- tmp_s_BG %>% 
    gather(type, SDM_shift, -c(SHIFT,Param,Param,New_name,Type,ID,time_period))  
tmp_s_BG$type <- factor(tmp_s_BG$type, 
                        levels = c("BG_5", "BG_25", "BG_50", "BG_75", "BG_95"))

ggplot(tmp_s_BG, aes(x = SDM_shift, y = SHIFT))+
    geom_point()+
    xlab("Observed shift (km/yr)")+
    ylab("Potential shift (km/yr)")+
    theme_classic() +
    geom_smooth(method = "gam")+
    facet_wrap(.~type, nrow = 1, scales = "free")
```

### *Per parameter*

```{r fig.width=5, fig.height=3, warning=FALSE, message=FALSE}

# LE
ggplot(tmp_s_BG %>%
           filter(Param == "LE" & (type == "BG_75" | type == "BG_95"))
       , aes(SDM_shift, y = SHIFT))+
    geom_point()+
    ylab("Observed shift (km/yr)")+
    xlab("Potential shift (km/yr)")+
    theme_classic() +
    geom_smooth(method = "gam")+
    facet_wrap(Param~type, nrow = 1, scales = "free")

# O
ggplot(tmp_s_BG %>%
           filter(Param == "O" & type == "BG_50")
       , aes(SDM_shift, y = SHIFT))+
    geom_point()+
    ylab("Observed shift (km/yr)")+
    xlab("Potential shift (km/yr)")+
    theme_classic() +
    geom_smooth(method = "gam")

# TE
ggplot(tmp_s_BG %>%
           filter(Param == "TE" & (type == "BG_5" | type == "BG_25"))
       , aes(SDM_shift, y = SHIFT))+
    geom_point()+
    ylab("Observed shift (km/yr)")+
    xlab("Potential shift (km/yr)")+
    theme_classic() +
    geom_smooth(method = "gam")+
    facet_wrap(Param~type, nrow = 1, scales = "free")

```

*Observed shifts are unrelated to shifts at the background area. This suggests that observed shifts represent local responses rather than a response that could be extrapolated to the complete species range.*

# *Is range shift sensitive to climate exposure?*

## *Exposure at the study area*

```{r fig.width=8, fig.height=3, warning=FALSE, message=FALSE}

tmp_e_SA <-  SDM_shifts %>% 
    dplyr::select(SHIFT,Param, New_name, Type, ID, time_period,
                  SST_max_SA, SST_mean_SA, SST_min_SA, SST_sd_SA,DUR) 

tmp_e_SA <- tmp_e_SA %>% 
    gather(type, Exposure, -c(SHIFT,Param,New_name,Type,ID,time_period,DUR))  
tmp_e_SA$type <- factor(tmp_e_SA$type, 
                        levels = c("SST_max_SA", "SST_mean_SA", "SST_min_SA", "SST_sd_SA"))
tmp_e_SA$velocity = tmp_e_SA$Exposure/tmp_e_SA$DUR

ggplot(tmp_e_SA, aes(x = Exposure, y = SHIFT))+
    geom_point()+
    xlab("Exposure (change in C)")+
    ylab("Observed shift (km/yr)")+
    theme_classic() +
    geom_smooth(method = "gam")+
    facet_wrap(.~type, nrow = 1)

ggplot(tmp_e_SA, aes(x = velocity, y = SHIFT))+
    geom_point()+
    xlab("Velocity (C/year)")+
    ylab("Observed shift (km/yr)")+
    theme_classic() +
    geom_smooth(method = "gam")+
    facet_wrap(.~type, nrow = 1)

```

### *Per parameter*

```{r fig.width=8, fig.height=3, warning=FALSE, message=FALSE}

# LE
ggplot(tmp_e_SA %>%
           filter(Param == "LE")
       , aes(Exposure, y = SHIFT))+
    geom_point()+
    ylab("Observed shift (km/yr)")+
    xlab("Exposure (change in C)")+
    theme_classic() +
    geom_smooth(method = "gam")+
    facet_wrap(.~type, nrow = 1, scales = "free")

# O
ggplot(tmp_e_SA %>%
           filter(Param == "O")
       , aes(Exposure, y = SHIFT))+
    geom_point()+
    ylab("Observed shift (km/yr)")+
    xlab("Exposure (change in C)")+
    theme_classic() +
    geom_smooth(method = "gam")+
    facet_wrap(.~type, nrow = 1, scales = "free")

# TE
ggplot(tmp_e_SA %>%
           filter(Param == "TE")
       , aes(Exposure, y = SHIFT))+
    geom_point()+
    ylab("Observed shift (km/yr)")+
    xlab("Exposure (change in C)")+
    theme_classic() +
    geom_smooth(method = "gam")+
    facet_wrap(.~type, nrow = 1, scales = "free")

#----------------------------#

# LE
ggplot(tmp_e_SA %>%
           filter(Param == "LE")
       , aes(velocity, y = SHIFT))+
    geom_point()+
    xlab("Velocity (C/year)")+
    xlab("velocity")+
    theme_classic() +
    geom_smooth(method = "gam")+
    facet_wrap(.~type, nrow = 1, scales = "free")

# O
ggplot(tmp_e_SA %>%
           filter(Param == "O")
       , aes(velocity, y = SHIFT))+
    geom_point()+
    xlab("Velocity (C/year)")+
    xlab("velocity")+
    theme_classic() +
    geom_smooth(method = "gam")+
    facet_wrap(.~type, nrow = 1, scales = "free")

# TE
ggplot(tmp_e_SA %>%
           filter(Param == "TE")
       , aes(velocity, y = SHIFT))+
    geom_point()+
    xlab("Velocity (C/year)")+
    xlab("velocity")+
    theme_classic() +
    geom_smooth(method = "gam")+
    facet_wrap(.~type, nrow = 1, scales = "free")

```

# *Are lags in range shift related to exposure?*

## *Lags at the study area*

```{r warning=FALSE, message=FALSE}

tmp_s_SA$lag_SA <- tmp_s_SA$SHIFT-tmp_s_SA$SDM_shift
names(tmp_s_SA)[which(names(tmp_s_SA)=="type")] <- "type_shift"
tmp_e_SA2 <- tmp_e_SA[,-which(names(tmp_e_SA)=="SHIFT")]
names(tmp_e_SA2)[which(names(tmp_e_SA2)=="type")] <- "type_exposure"

tmp_lags <- left_join(tmp_s_SA,tmp_e_SA2, 
                      by = join_by(New_name == New_name,
                                   Param == Param,
                                   ID == ID, 
                                   time_period == time_period,
                                   Type == Type))

if(any(is.infinite(tmp_lags$lag_SA))){
    tmp_lags2 <- tmp_lags[-which(is.infinite(tmp_lags$lag_SA)),]
} else {
    tmp_lags2 <- tmp_lags
}
tmp_lags2 <- na.omit(tmp_lags2)

taxo <- sp_bioshifts[,c("New_name", "Class", "group")]
tmp_lags2 <- tmp_lags2 %>% 
    left_join(taxo, by = "New_name")

# remove outliers
quartiles <- quantile(tmp_lags2$lag_SA, probs=c(.25, .75))
IQR <- IQR(tmp_lags2$lag_SA)

Lower <- quartiles[1] - 1.5*IQR
Upper <- quartiles[2] + 1.5*IQR 

tmp_lags2 <- subset(tmp_lags2, tmp_lags2$lag_SA > Lower & tmp_lags2$lag_SA < Upper)

ggplot(tmp_lags2, 
       aes(x=Class, y=lag_SA, 
           fill = Class, color = Class))+
    geom_hline(yintercept = 0, color="gray")+
    geom_jitter(alpha = .1, 
                position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), 
                aes(color = Class))+
    coord_flip()+
    geom_boxplot(alpha = .3)+
    theme_classic() +
    theme(legend.position = "none")+
    facet_wrap(.~Param, scales = "free_x")

```

```{r warning=FALSE, message=FALSE, fig.width=8, fig.height=2}

ggplot(tmp_lags, aes(x = Exposure, y = lag_SA))+
    geom_point()+
    xlab("Exposure")+
    ylab("Lag")+
    theme_classic() +
    geom_smooth(method = "gam")+
    facet_wrap(.~type_exposure, nrow = 1)

```

```{r fig.height=5, warning=FALSE, message=FALSE}
ggplot(tmp_lags2, aes(x = Exposure, y = lag_SA))+
    geom_point()+
    xlab("Exposure")+
    ylab("Lag")+
    theme_classic() +
    geom_smooth(method = "gam")+
    facet_wrap(type_exposure~type_shift, nrow = 4, scales = "free_y")
```
