---
title: "Summary SDMs"
author: "Bioshifts"
format: 
  html:
    toc: true
    number-sections: true
    code-fold: true
    code-summary: "Code"
---

```{r message=FALSE}
rm(list=ls())
gc()

library(dplyr)
library(tidyr)
library(ggplot2)
library(knitr)
library(pbapply)
library(data.table)
```

# *sources*

```{r source}
try(source(here::here("R/settings.R")))
```

# *Load data*

```{r }
maxnet_dir <- "/media/seagate/boliveira/SDMs/MaxNet"

#################################
# sp list Mar
SDMsSpListMar <- list.files(here::here(maxnet_dir,"Mar"))
# sp list Ter
SDMsSpListTer <- list.files(here::here(maxnet_dir,"Ter"))

SDMsSpList <- data.frame(species = unique(c(SDMsSpListMar,SDMsSpListTer)))
SDMsSpList$Mar <- ifelse(SDMsSpList$species %in% SDMsSpListMar, 1, 0)
SDMsSpList$Ter <- ifelse(SDMsSpList$species %in% SDMsSpListTer, 1, 0)
SDMsSpList <- SDMsSpList[-which(SDMsSpList$species=="Old"),]

#################################
# Get taxonomy
FullList <- read.csv(here::here("Data/splist.csv"))
FullList <- FullList %>% filter(v1 == 1)

MyList <- FullList %>% filter(scientificName %in% gsub("_"," ",SDMsSpList$species))
MyList <- MyList %>% filter(!duplicated(scientificName))

#################################
# Load bioshifts
biov1 <- read.table(here::here("Data/Shifts2018_checkedtaxo.txt"),header = T)
## Use LAT ELE shifts
biov1$Type[which(!is.na(biov1$Azimuth))] <- "LAT" # All obs type == HOR contain Azimuth value
biov1 <- biov1[which(biov1$Type=="ELE" | biov1$Type=="LAT"),]
## Use temporal period from the environmental data
biov1_Mar <- biov1 %>% filter(START >= get_temporal_range_env_data("Mar")[1] + n_yr_bioclimatic)
biov1_Ter <- biov1 %>% filter(START >= get_temporal_range_env_data("Ter")[1] + n_yr_bioclimatic)

#################################
# Load SDM data
## Info used for fitting the SDMs
### Marines
sp_Mar <- SDMsSpList$species[which(SDMsSpList$Mar==1)]
if(length(sp_Mar)>0){
    N_occ_Mar <- pblapply(1:length(sp_Mar), function(i) {
        file_i <- here::here(maxnet_dir,"Mar",sp_Mar[i],paste0(sp_Mar[i],"_SDM_info.csv"))
        if(file.exists(file_i)){
            read.csv(file_i)
        }
    })
    N_occ_Mar <- rbindlist(N_occ_Mar)
}

### Terrestrials
sp_Ter <- SDMsSpList$species[which(SDMsSpList$Ter==1)]
if(length(sp_Ter)>0){
    N_occ_Ter <- pblapply(1:length(sp_Ter), function(i) {
        file_i <- here::here(maxnet_dir,"Ter",sp_Ter[i],paste0(sp_Ter[i],"_SDM_info.csv"))
        if(file.exists(file_i)){
            read.csv(file_i)
        }
    })
    N_occ_Ter <- rbindlist(N_occ_Ter)
}

### Merge all
N_occ <- data.frame()
if(length(sp_Mar)>0){
    N_occ <- rbind(N_occ,
                   data.frame(N_occ_Mar,ECO="Mar"))
}
if(length(sp_Ter)>0){
    N_occ <- rbind(N_occ,
                   data.frame(N_occ_Ter,ECO="Ter"))
}


#################################
# Load SDM validation data
if(length(sp_Mar)>0){
    SDM_Mar <- pblapply(1:length(sp_Mar), function(i) {
        file_i <- here::here(maxnet_dir,"Mar",sp_Mar[i],paste0(sp_Mar[i],"_CV.csv"))
        if(file.exists(file_i)){
            tmp <- read.csv(file_i)
            data.frame(Realm = "Mar", sps = sp_Mar[i], tmp)
        }
    })
    SDM_Mar <- rbindlist(SDM_Mar)
    SDM_Mar <- SDM_Mar %>%
        group_by(Realm, sps, Metric, Model) %>%
        dplyr::summarise(Value = mean(Value))
}

### Terrestrials
if(length(sp_Ter)>0){
    SDM_Ter <- pblapply(1:length(sp_Ter), function(i) {
        file_i <- here::here(maxnet_dir,"Ter",sp_Ter[i],paste0(sp_Ter[i],"_CV.csv"))
        if(file.exists(file_i)){
            tmp <- read.csv(file_i)
            data.frame(Realm = "Ter", sps = sp_Ter[i], tmp)
        }
    })
    SDM_Ter <- rbindlist(SDM_Ter)
    SDM_Ter <- SDM_Ter %>%
        group_by(Realm, sps, Metric, Model) %>%
        dplyr::sumTerise(Value = mean(Value))
}

### Merge all
SDM_info <- data.frame()
if(length(sp_Mar)>0){
    SDM_info <- rbind(SDM_info,
                      SDM_Mar)
}
if(length(sp_Ter)>0){
    SDM_info <- rbind(SDM_info,
                      SDM_Ter)
}

```

*Out of the `r length(FullList)` in bioshifts v1, we fitted SDMs for `r length(SDMsSpList)` species (`r length(sp_Mar)` marine and `r length(sp_Ter)` terrestrials). We cannot fit SDMs for all species in v1 due to limitation in the time-span of the available environmental data. This means, we selected marine species with shifts occurring after `r get_temporal_range_env_data("Mar")[1] + n_yr_bioclimatic` and terrestrial species with shifts occurring after `r get_temporal_range_env_data("Ter")[1] + n_yr_bioclimatic`.*

# *What taxa?*

```{r fig.height=4, fig.width=8}
ggplot(MyList, aes(x=class))+
    ggtitle("N species by Class and Phylum")+
    geom_bar()+
    theme_classic()+
    coord_flip()+
    facet_wrap(.~phylum, scales = "free_y", ncol = 3)
```

# *N of occurrences*

```{r fig.height=3}
ggplot(data = N_occ, aes(N_occ))+
    geom_histogram(bins = 100)+
    theme_classic()

summary(N_occ$N_occ)
```

# *N time periods*

```{r fig.height=3}
tmp <- data.frame(table(N_occ$N_time_periods))

ggplot(tmp, aes(x = Var1, y = Freq))+
    geom_col()+
    theme_classic()+
    geom_text(aes(label = Freq), vjust = -0.5)+
    xlab("N time periods")

```

# *N study areas*

```{r fig.height=3}
tmp <- data.frame(table(N_occ$N_study_areas))

ggplot(tmp, aes(x = Var1, y = Freq))+
    geom_col()+
    theme_classic()+
    geom_text(aes(label = Freq), vjust = -0.5)+
    xlab("N study areas")

```

# *Shift duration*

```{r fig.height=4, error=FALSE}
periods <- lapply(N_occ$Time_periods, function(x){
    tmp <- as.numeric(strsplit(x,"-")[[1]])
    data.frame(start = tmp[1],
               end = tmp[2],
               duration = tmp[2]-tmp[1])
})
periods <- do.call(rbind,periods)

tmp <- data.frame(table(periods$duration))

ggplot(tmp, aes(x = Var1, y = Freq))+
    geom_col()+
    theme_classic()+
    geom_text(aes(label = Freq), vjust = -0.5)+
    xlab("Shift duration (years)")

```

# *Shift periods*

```{r fig.height=4}

N_occ <- cbind(N_occ,periods)
tmp <- N_occ %>% filter(!duplicated(Time_periods))

ggplot(data = tmp)+
    geom_segment( aes(x=Time_periods, xend=Time_periods, y=start, yend=end)) +
    geom_point(aes(x=Time_periods, y=start), 
               color=rgb(0.2,0.7,0.1,0.5), size=1 ) + #green
    geom_point(aes(x=Time_periods, y=end), 
               color=rgb(0.7,0.2,0.1,0.5), size=1 ) + # red
    coord_flip()+
    theme(
        axis.text=element_text(size=6),
        legend.position = "none") +
    theme_classic()+
    xlab("")+
    ylab("Year")

```

# *SDM performace*

```{r }

ggplot(data = SDM_info, aes(x = Metric, y = Value, fill = Model))+
    geom_jitter(alpha = .3, position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), aes(color = Model))+
    geom_boxplot(alpha = .5)+
    theme_classic()+
    xlab("Shift period (years)")+
    ylab("Freq")+
    facet_wrap(.~Metric, scales = "free", ncol = 4)

# breakdown by Class
tmp3 <- SDM_info %>% 
    mutate(sps = gsub("_"," ",sps)) %>%
    left_join(MyList, by = join_by(sps == scientificName)) %>%
    dplyr::filter(!is.na(class)) %>%
    dplyr::filter(Metric=="TSS")

ggplot(data = tmp3, aes(x = Model, y = Value))+
    geom_jitter(alpha = .3, position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), aes(color = class))+
    geom_boxplot(alpha = .5)+
    theme_classic()+
    ylab("TSS")+
    coord_flip()+
    theme(legend.position = "none")+
    facet_wrap(.~class)

```

